# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
env:
  DOCKER_REGISTRY: 172.16.238.245
  APP_NAME: order
  JFROG_USER: ${{ secrets.JFROG_USER }}
  JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
#    - name: Login to DockerHub
#      run: |
#          echo "${{ secrets.DOCKERHUB_PASS }}" | docker login -u "venupj" --password-stdin 
        
    
#    - name: Push to Docker Hub
#      uses: mr-smithers-excellent/docker-build-push@v5
#      if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
#      with:
#         dockerfile: docker/orders/Dockerfile.github
#         registry: docker.io
#         image: venupj/order 
    - uses: actions/checkout@v2    
    - name: jforg login
#      run: docker login -u "$JFROG_USER" -p "$JFROG_PASSWORD" $DOCKER_REGISTRY
 #     run: |
#        echo "${{ secrets.JFROG_PASSWORD }}" | docker login -u "venupj" --password-stdin 

      uses: jfrog/setup-jfrog-cli@v2
      env:   
       JF_USER: ${{ secrets.JF_USER }}
       JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
       
    - name: Build the Docker image
      run: docker build . --tag "$DOCKER_REGISTRY/$APP_NAME:1.0.${{ github.run_id }}"
    - name: Push to JFrog
      run: docker push "$DOCKER_REGISTRY/$APP_NAME:1.0.${{ github.run_id }}"



 #   - name: Run the Command
 #     run: docker tag master-c6f447a https://registry-1.docker.io/docker/order:v1
      
   
      
      
      
      
      
       


